// Generated by gencpp from file planning/BuildStructure.msg
// DO NOT EDIT!


#ifndef PLANNING_MESSAGE_BUILDSTRUCTURE_H
#define PLANNING_MESSAGE_BUILDSTRUCTURE_H

#include <ros/service_traits.h>


#include <planning/BuildStructureRequest.h>
#include <planning/BuildStructureResponse.h>


namespace planning
{

struct BuildStructure
{

typedef BuildStructureRequest Request;
typedef BuildStructureResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct BuildStructure
} // namespace planning


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::planning::BuildStructure > {
  static const char* value()
  {
    return "94a3098ba73f0d4168f95004e9a559df";
  }

  static const char* value(const ::planning::BuildStructure&) { return value(); }
};

template<>
struct DataType< ::planning::BuildStructure > {
  static const char* value()
  {
    return "planning/BuildStructure";
  }

  static const char* value(const ::planning::BuildStructure&) { return value(); }
};


// service_traits::MD5Sum< ::planning::BuildStructureRequest> should match 
// service_traits::MD5Sum< ::planning::BuildStructure > 
template<>
struct MD5Sum< ::planning::BuildStructureRequest>
{
  static const char* value()
  {
    return MD5Sum< ::planning::BuildStructure >::value();
  }
  static const char* value(const ::planning::BuildStructureRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::planning::BuildStructureRequest> should match 
// service_traits::DataType< ::planning::BuildStructure > 
template<>
struct DataType< ::planning::BuildStructureRequest>
{
  static const char* value()
  {
    return DataType< ::planning::BuildStructure >::value();
  }
  static const char* value(const ::planning::BuildStructureRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::planning::BuildStructureResponse> should match 
// service_traits::MD5Sum< ::planning::BuildStructure > 
template<>
struct MD5Sum< ::planning::BuildStructureResponse>
{
  static const char* value()
  {
    return MD5Sum< ::planning::BuildStructure >::value();
  }
  static const char* value(const ::planning::BuildStructureResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::planning::BuildStructureResponse> should match 
// service_traits::DataType< ::planning::BuildStructure > 
template<>
struct DataType< ::planning::BuildStructureResponse>
{
  static const char* value()
  {
    return DataType< ::planning::BuildStructure >::value();
  }
  static const char* value(const ::planning::BuildStructureResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PLANNING_MESSAGE_BUILDSTRUCTURE_H
